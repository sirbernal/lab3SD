// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: proto/DNSService.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetClockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Soli string `protobuf:"bytes,1,opt,name=soli,proto3" json:"soli,omitempty"`
}

func (x *GetClockRequest) Reset() {
	*x = GetClockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_DNSService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClockRequest) ProtoMessage() {}

func (x *GetClockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_DNSService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClockRequest.ProtoReflect.Descriptor instead.
func (*GetClockRequest) Descriptor() ([]byte, []int) {
	return file_proto_DNSService_proto_rawDescGZIP(), []int{0}
}

func (x *GetClockRequest) GetSoli() string {
	if x != nil {
		return x.Soli
	}
	return ""
}

type GetClockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clock []int64 `protobuf:"varint,1,rep,packed,name=clock,proto3" json:"clock,omitempty"`
}

func (x *GetClockResponse) Reset() {
	*x = GetClockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_DNSService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClockResponse) ProtoMessage() {}

func (x *GetClockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_DNSService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClockResponse.ProtoReflect.Descriptor instead.
func (*GetClockResponse) Descriptor() ([]byte, []int) {
	return file_proto_DNSService_proto_rawDescGZIP(), []int{1}
}

func (x *GetClockResponse) GetClock() []int64 {
	if x != nil {
		return x.Clock
	}
	return nil
}

type SendChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Soli string `protobuf:"bytes,1,opt,name=soli,proto3" json:"soli,omitempty"`
}

func (x *SendChangesRequest) Reset() {
	*x = SendChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_DNSService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChangesRequest) ProtoMessage() {}

func (x *SendChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_DNSService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChangesRequest.ProtoReflect.Descriptor instead.
func (*SendChangesRequest) Descriptor() ([]byte, []int) {
	return file_proto_DNSService_proto_rawDescGZIP(), []int{2}
}

func (x *SendChangesRequest) GetSoli() string {
	if x != nil {
		return x.Soli
	}
	return ""
}

type SendChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dominios []string `protobuf:"bytes,1,rep,name=dominios,proto3" json:"dominios,omitempty"`
}

func (x *SendChangesResponse) Reset() {
	*x = SendChangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_DNSService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChangesResponse) ProtoMessage() {}

func (x *SendChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_DNSService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChangesResponse.ProtoReflect.Descriptor instead.
func (*SendChangesResponse) Descriptor() ([]byte, []int) {
	return file_proto_DNSService_proto_rawDescGZIP(), []int{3}
}

func (x *SendChangesResponse) GetDominios() []string {
	if x != nil {
		return x.Dominios
	}
	return nil
}

type ReceiveChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operations []string `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	Type       int64    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"` //0: borrado inicial (mandado con la primera direccion) 1: recepci√≥n de sitios 2: recepcion ultimo sitio (borrado final) 3: recepcion de dominios
}

func (x *ReceiveChangesRequest) Reset() {
	*x = ReceiveChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_DNSService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveChangesRequest) ProtoMessage() {}

func (x *ReceiveChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_DNSService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveChangesRequest.ProtoReflect.Descriptor instead.
func (*ReceiveChangesRequest) Descriptor() ([]byte, []int) {
	return file_proto_DNSService_proto_rawDescGZIP(), []int{4}
}

func (x *ReceiveChangesRequest) GetOperations() []string {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *ReceiveChangesRequest) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type ReceiveChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ReceiveChangesResponse) Reset() {
	*x = ReceiveChangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_DNSService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveChangesResponse) ProtoMessage() {}

func (x *ReceiveChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_DNSService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveChangesResponse.ProtoReflect.Descriptor instead.
func (*ReceiveChangesResponse) Descriptor() ([]byte, []int) {
	return file_proto_DNSService_proto_rawDescGZIP(), []int{5}
}

func (x *ReceiveChangesResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_proto_DNSService_proto protoreflect.FileDescriptor

var file_proto_DNSService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x44, 0x4e, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x25, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x6c, 0x69,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x6c, 0x69, 0x22, 0x28, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x28, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x6c, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x6c, 0x69,
	0x22, 0x31, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x6d, 0x69, 0x6e,
	0x69, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x69, 0x6e,
	0x69, 0x6f, 0x73, 0x22, 0x4b, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x30, 0x0a, 0x16, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x32, 0x88, 0x02, 0x0a, 0x0a, 0x44, 0x4e, 0x53, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x49, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x2e,
	0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x6e,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0b,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x64, 0x6e,
	0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x64,
	0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5b, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x12, 0x22, 0x2e, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x13, 0x5a,
	0x11, 0x64, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_DNSService_proto_rawDescOnce sync.Once
	file_proto_DNSService_proto_rawDescData = file_proto_DNSService_proto_rawDesc
)

func file_proto_DNSService_proto_rawDescGZIP() []byte {
	file_proto_DNSService_proto_rawDescOnce.Do(func() {
		file_proto_DNSService_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_DNSService_proto_rawDescData)
	})
	return file_proto_DNSService_proto_rawDescData
}

var file_proto_DNSService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_DNSService_proto_goTypes = []interface{}{
	(*GetClockRequest)(nil),        // 0: dns_service.GetClockRequest
	(*GetClockResponse)(nil),       // 1: dns_service.GetClockResponse
	(*SendChangesRequest)(nil),     // 2: dns_service.SendChangesRequest
	(*SendChangesResponse)(nil),    // 3: dns_service.SendChangesResponse
	(*ReceiveChangesRequest)(nil),  // 4: dns_service.ReceiveChangesRequest
	(*ReceiveChangesResponse)(nil), // 5: dns_service.ReceiveChangesResponse
}
var file_proto_DNSService_proto_depIdxs = []int32{
	0, // 0: dns_service.DNSService.GetClock:input_type -> dns_service.GetClockRequest
	2, // 1: dns_service.DNSService.SendChanges:input_type -> dns_service.SendChangesRequest
	4, // 2: dns_service.DNSService.ReceiveChanges:input_type -> dns_service.ReceiveChangesRequest
	1, // 3: dns_service.DNSService.GetClock:output_type -> dns_service.GetClockResponse
	3, // 4: dns_service.DNSService.SendChanges:output_type -> dns_service.SendChangesResponse
	5, // 5: dns_service.DNSService.ReceiveChanges:output_type -> dns_service.ReceiveChangesResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_DNSService_proto_init() }
func file_proto_DNSService_proto_init() {
	if File_proto_DNSService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_DNSService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_DNSService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_DNSService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_DNSService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_DNSService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_DNSService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveChangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_DNSService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_DNSService_proto_goTypes,
		DependencyIndexes: file_proto_DNSService_proto_depIdxs,
		MessageInfos:      file_proto_DNSService_proto_msgTypes,
	}.Build()
	File_proto_DNSService_proto = out.File
	file_proto_DNSService_proto_rawDesc = nil
	file_proto_DNSService_proto_goTypes = nil
	file_proto_DNSService_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DNSServiceClient is the client API for DNSService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DNSServiceClient interface {
	GetClock(ctx context.Context, in *GetClockRequest, opts ...grpc.CallOption) (*GetClockResponse, error)
	SendChanges(ctx context.Context, in *SendChangesRequest, opts ...grpc.CallOption) (*SendChangesResponse, error)
	ReceiveChanges(ctx context.Context, in *ReceiveChangesRequest, opts ...grpc.CallOption) (*ReceiveChangesResponse, error)
}

type dNSServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDNSServiceClient(cc grpc.ClientConnInterface) DNSServiceClient {
	return &dNSServiceClient{cc}
}

func (c *dNSServiceClient) GetClock(ctx context.Context, in *GetClockRequest, opts ...grpc.CallOption) (*GetClockResponse, error) {
	out := new(GetClockResponse)
	err := c.cc.Invoke(ctx, "/dns_service.DNSService/GetClock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServiceClient) SendChanges(ctx context.Context, in *SendChangesRequest, opts ...grpc.CallOption) (*SendChangesResponse, error) {
	out := new(SendChangesResponse)
	err := c.cc.Invoke(ctx, "/dns_service.DNSService/SendChanges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServiceClient) ReceiveChanges(ctx context.Context, in *ReceiveChangesRequest, opts ...grpc.CallOption) (*ReceiveChangesResponse, error) {
	out := new(ReceiveChangesResponse)
	err := c.cc.Invoke(ctx, "/dns_service.DNSService/ReceiveChanges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DNSServiceServer is the server API for DNSService service.
type DNSServiceServer interface {
	GetClock(context.Context, *GetClockRequest) (*GetClockResponse, error)
	SendChanges(context.Context, *SendChangesRequest) (*SendChangesResponse, error)
	ReceiveChanges(context.Context, *ReceiveChangesRequest) (*ReceiveChangesResponse, error)
}

// UnimplementedDNSServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDNSServiceServer struct {
}

func (*UnimplementedDNSServiceServer) GetClock(context.Context, *GetClockRequest) (*GetClockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClock not implemented")
}
func (*UnimplementedDNSServiceServer) SendChanges(context.Context, *SendChangesRequest) (*SendChangesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendChanges not implemented")
}
func (*UnimplementedDNSServiceServer) ReceiveChanges(context.Context, *ReceiveChangesRequest) (*ReceiveChangesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveChanges not implemented")
}

func RegisterDNSServiceServer(s *grpc.Server, srv DNSServiceServer) {
	s.RegisterService(&_DNSService_serviceDesc, srv)
}

func _DNSService_GetClock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServiceServer).GetClock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_service.DNSService/GetClock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServiceServer).GetClock(ctx, req.(*GetClockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSService_SendChanges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendChangesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServiceServer).SendChanges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_service.DNSService/SendChanges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServiceServer).SendChanges(ctx, req.(*SendChangesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSService_ReceiveChanges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReceiveChangesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServiceServer).ReceiveChanges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dns_service.DNSService/ReceiveChanges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServiceServer).ReceiveChanges(ctx, req.(*ReceiveChangesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DNSService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dns_service.DNSService",
	HandlerType: (*DNSServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetClock",
			Handler:    _DNSService_GetClock_Handler,
		},
		{
			MethodName: "SendChanges",
			Handler:    _DNSService_SendChanges_Handler,
		},
		{
			MethodName: "ReceiveChanges",
			Handler:    _DNSService_ReceiveChanges_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/DNSService.proto",
}
